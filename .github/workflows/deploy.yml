name: Full Deployment to EC2 via ECR

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build, Push to ECR, and Deploy to EC2
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: omar509  # Your image tag
      ECR_REPO: churn-prediction  # Your ECR repo name

    steps:
    ### 1 - Unit Testing
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests
      run: pytest

    ### 2 - ECR Deployment
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Docker image
      run: |
        ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
        FULL_IMAGE=$ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG
        docker build -t $FULL_IMAGE .
        docker push $FULL_IMAGE

    ### 3 - EC2 Deployment
    - name: Copy docker-compose.yml to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}
        source: "docker-compose.yml"
        target: "/home/${{ secrets.EC2_USERNAME }}/app"

    - name: SSH into EC2 and deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          cd /home/${{ secrets.EC2_USERNAME }}/app
          echo "Using image tag: ${{ env.IMAGE_TAG }}"
          docker-compose down
          docker-compose pull
          docker-compose up -d